<?php

namespace app\controller\count;


use app\controller\Base;
use app\model\GameRecords;
use app\model\MoneyLog;

class Records extends Base
{
    protected $model;

    /**
     * 订单控制器
     * 后面可以直接通过 ntp_common_today_count 读取前面的金额，在读取当前表当日的内容，就可以统计出所有的
     */
    public function initialize()
    {
        $this->model = new GameRecords();
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    //
    public function index()
    {
        $post = array_filter($this->request->post());
        if ($this->request->post('id') <= 0) return $this->failed('id错误');
        $date = [];
        isset($post['start']) && $date['start'] = $post['start'];
        isset($post['end']) && $date['end'] = $post['end'];
        //投注总额  总洗码 总洗码免佣
        //总洗码非免佣 总输赢  百家乐总输赢
        //龙虎总输赢 牛牛总输赢 现场台总输赢
        //百家乐总赢  龙虎总赢 牛牛总赢 现场台总赢
        //百家乐总输  龙虎总输 牛牛总输 现场台总输
        //统计维度：可以选择 开始跟 结束时间
        //查询总输赢
        $sum = $this->sum($post['id'],$date);//总输
        $transport = $this->transport($post['id'],$date);
        $win = $this->win($post['id'],$date);//总赢
        $win_transport = $this->count_win_transport($post['id'],$date);//总输赢

        $exempt = $this->exempt($post['id'],$date);

        $list = [];
        $game_type_list = [1,2,3,6,8];
        for ($x = 0; $x < count($game_type_list); $x++) {
            $list[$x]['bet_amt'] = 0;
            $list[$x]['shuffling_amt'] = 0;
            $list[$x]['win_amt'] = 0;
            $list[$x]['transport_bet_amt'] = 0;
            $list[$x]['win_win_amt'] = 0;
            $list[$x]['is_no_exempt'] = 0;
            $list[$x]['is_ok_exempt'] = 0;
            $list[$x]['game_type'] = $game_type_list[$x];
        }
        $count[0]['bet_amt'] = 0;
        $count[0]['shuffling_amt'] = 0;
        $count[0]['win_amt'] = 0;
        $count[0]['transport_bet_amt'] = 0;
        $count[0]['win_win_amt'] = 0;
        $count[0]['is_no_exempt'] = 0;
        $count[0]['is_ok_exempt'] = 0;
        $count[0]['game_name'] = '合计';
        foreach ($list as $k => &$v) {
            foreach ($sum as $key => $val) {
                if ($val['game_type'] == $v['game_type']) {
                    $v['bet_amt'] = $val['bet_amt'];
                    $v['shuffling_amt'] = intval($val['shuffling_amt']);
                }
            }
            foreach ($transport as $key => $val) {
                if ($val['game_type'] == $v['game_type']) {
                    $v['transport_bet_amt'] = $val['transport_bet_amt'];
                }
            }

            foreach ($win as $key => $val) {
                if ($val['game_type'] == $v['game_type']) {
                    $v['win_win_amt'] = $val['win_win_amt'];
                }
            }

            foreach ($exempt as $key => $val) {
                if ($val['game_type'] == $v['game_type']) {
                    if ($val['is_exempt'] == 1) {
                        $v['is_ok_exempt'] = $val['is_shuffling_amt'];
                    } else {
                        $v['is_no_exempt'] = $val['is_shuffling_amt'];
                    }
                }
            }

            foreach ($win_transport as $key => $val) {
                if ($val['game_type'] == $v['game_type']) {
                    $v['win_amt'] = $val['win_win_amt'];
                }
            }
            $v['win_amt']  = round( $v['win_win_amt']+$v['transport_bet_amt'],2);
            $v['game_name'] = '';

            switch ($v['game_type']) {
                case 1:
                    $v ['game_name'] = '现场台';
                    break;
                case 2:
                    $v ['game_name'] = '龙虎';
                    break;
                case 3:
                    $v ['game_name'] = '百家乐';
                    break;
                case 6:
                    $v ['game_name'] = '牛牛';
                    break;
                case 8:
                    $v ['game_name'] = '三公';
                    break;
            }
            $count[0]['bet_amt'] += $v['bet_amt'];
            $count[0]['shuffling_amt'] += $v['shuffling_amt'];
            $count[0]['win_amt'] += $v['win_amt'];
            $count[0]['transport_bet_amt'] += $v['transport_bet_amt'];
            $count[0]['win_win_amt'] += $v['win_win_amt'];
            $count[0]['is_no_exempt'] += $v['is_no_exempt'];
            $count[0]['is_ok_exempt'] += $v['is_ok_exempt'];

            $count[0]['bet_amt'] = round( $count[0]['bet_amt'],2);
            $count[0]['shuffling_amt'] = round( $count[0]['shuffling_amt'],2);
            $count[0]['win_amt'] = round( $count[0]['win_amt'],2);
            $count[0]['transport_bet_amt'] = round( $count[0]['transport_bet_amt'],2);
            $count[0]['win_win_amt'] = round( $count[0]['win_win_amt'],2);
            $count[0]['is_no_exempt'] = round( $count[0]['is_no_exempt'],2);
            $count[0]['is_ok_exempt'] = round( $count[0]['is_ok_exempt'],2);
        }

        $list = array_merge($list, $count);

        return $this->success($list);
    }

    public function sum($id,$date)
    {
        $date  =  array_filter($date);
        $res = new GameRecords();
        if (isset($date['start']) && isset($date['end'])) {
            $res = $res->whereTime('created_at', 'between', [$date['start'], $date['end']]);
        } elseif (isset($date['start'])) {
            $res = $res->whereTime('created_at', '>=', $date['start']);
        } elseif (isset($date['end'])) {
            $res = $res->whereTime('created_at', '<=', $date['end']);
        }
        //查询总输赢
        $res = $res->where('user_id',$id);
        return $res->field('
            sum(bet_amt) bet_amt,
            sum(shuffling_num) shuffling_amt,
            sum(win_amt) win_amt,
            game_type
            ')
            ->where('close_status',2)
            ->group('game_type')
            ->select()->toArray();
    }

    public function transport($id,$date)
    {
        $date  =  array_filter($date);
        $res = new GameRecords();
        if (isset($date['start']) && isset($date['end'])) {
            $res = $res->whereTime('created_at', 'between', [$date['start'], $date['end']]);
        } elseif (isset($date['start'])) {
            $res = $res->whereTime('created_at', '>=', $date['start']);
        } elseif (isset($date['end'])) {
            $res = $res->whereTime('created_at', '<=', $date['end']);
        }
        $res = $res->where('user_id',$id);
        //查询会员总输
        return $res->where('win_amt', '<', 0)
            ->where('close_status',2)
            ->field('
            sum(win_amt) transport_bet_amt,
            game_type
            ')
            ->group('game_type')
            ->select()
            ->toArray();
    }

    public function win($id,$date)
    {
        $date  =  array_filter($date);
        $res = new GameRecords();
        if (isset($date['start']) && isset($date['end'])) {
            $res = $res->whereTime('created_at', 'between', [$date['start'], $date['end']]);
        } elseif (isset($date['start'])) {
            $res = $res->whereTime('created_at', '>=', $date['start']);
        } elseif (isset($date['end'])) {
            $res = $res->whereTime('created_at', '<=', $date['end']);
        }
        $res = $res->where('user_id',$id);
        //查询会员总赢
        return $res->where('win_amt', '>', 0)
            ->where('close_status',2)
            ->field('
            sum(win_amt) win_win_amt,
            game_type
            ')
            ->group('game_type')
            ->select()->toArray();

    }

    public function exempt($id,$date)
    {
        $date  =  array_filter($date);
        $res = new GameRecords();
        if (isset($date['start']) && isset($date['end'])) {
            $res = $res->whereTime('created_at', 'between', [$date['start'], $date['end']]);
        } elseif (isset($date['start'])) {
            $res = $res->whereTime('created_at', '>=', $date['start']);
        } elseif (isset($date['end'])) {
            $res = $res->whereTime('created_at', '<=', $date['end']);
        }
        $res = $res->where('user_id',$id);
        //查询免佣和非免用的洗码
        return  $res
            ->field('
            sum(shuffling_num) is_shuffling_amt,
            game_type,is_exempt
            ')
            ->where('close_status',2)
            ->group('game_type,is_exempt')
            ->select()->toArray();
    }

    public function count_win_transport($id,$date)
    {
        $date  =  array_filter($date);
        $res = new MoneyLog();
        if (isset($date['start']) && isset($date['end'])) {
            $res = $res->whereTime('create_time', 'between', [$date['start'], $date['end']]);
        } elseif (isset($date['start'])) {
            $res = $res->whereTime('create_time', '>=', $date['start']);
        } elseif (isset($date['end'])) {
            $res = $res->whereTime('create_time', '<=', $date['end']);
        }
        //查询当前所有用户的总输赢
        $win_win_amt = $res->where('status','in',MoneyLog::$game_order_status)
            ->field('sum(money) win_win_amt,status as status_data')
            ->where('uid', $id)
            ->group('status')
            ->select()
            ->toArray();

        if (empty($win_win_amt)) return [];

        $win = [];
        foreach ($win_win_amt as $key=>$val){
            $win[$key] = $val;
            $game_type = 0;
            switch ($val['status_data']){
                case 501:$game_type = 1;break;
                case 502:$game_type = 2;break;
                case 503:$game_type = 3;break;
                case 506:$game_type = 6;break;
                case 508:$game_type = 8;break;
                case 509:$game_type = 9;break;
            }
            if ($game_type == 0){
                continue;
            }
            $win[$key]['game_type'] = $game_type;
        }
        return $win;
    }
}